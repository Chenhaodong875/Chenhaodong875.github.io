<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何搭建个人博客？？]]></title>
    <url>%2F2019%2F09%2F08%2Farticle%201%2F</url>
    <content type="text"><![CDATA[1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283搭建个人博客我们通常使用Hexo+Github Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。GitHub于2008年4月10日正式上线，除了Git代码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。![GitHub小黑猫](C:\Users\hp\blog\themes\next\source\images\GitHub小黑猫.jpg)本地Win10搭建环境安装Git(下载安装包，打开后一直下一步到结束就行)https://git-scm.com/download/win检查电脑是否安装了 Git ？Windows + R -&gt; cmd -&gt; 进入 Dos 窗口在 Dos 窗口下，输入以下命令并执行 ：git --version把下列这段代码加入本地hosts文件(一般在c:\windows\system32\drivers\etc)内，加速访问Github网站的速度# GitHub Start192.30.253.112 github.com192.30.253.119 gist.github.com151.101.100.133 assets-cdn.github.com151.101.100.133 raw.githubusercontent.com151.101.100.133 gist.githubusercontent.com151.101.100.133 cloud.githubusercontent.com151.101.100.133 camo.githubusercontent.com151.101.100.133 avatars0.githubusercontent.com151.101.100.133 avatars1.githubusercontent.com151.101.100.133 avatars2.githubusercontent.com151.101.100.133 avatars3.githubusercontent.com151.101.100.133 avatars4.githubusercontent.com151.101.100.133 avatars5.githubusercontent.com151.101.100.133 avatars6.githubusercontent.com151.101.100.133 avatars7.githubusercontent.com151.101.100.133 avatars8.githubusercontent.com# GitHub End安装Nodejs(下载安装包，打开后一直下一步到结束就行)http://nodejs.cn/download/检查电脑是否安装了 Node.js ？Windows + R -&gt; cmd -&gt; 进入 Dos 窗口在 Dos 窗口下，输入以下命令并执行 ：node -v下载安装完Git后会出现以下两个图标：![Git base](C:\Users\hp\blog\Git base.png)![Git CMD](C:\Users\hp\blog\Git CMD.png)在git上经常使用的命令如下：hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page "xx"(hexo n page) 创建页面 $ hexo new "xx" (hexo n "") 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件安装Hexo（1）第一步：安装Hexo扩展插件，点击Git Bash,执行以下代码：$ npm install hexo-cli -g $ hexo init blog$ cd blog$ npm install$ hexo server（2）第二步：创建一个 blog 文件夹，下载 hexo 相应的代码到该文件中下。此时目录情况如下 ：![1869686-8dad0e2a5e210374](C:\Users\hp\blog\1869686-8dad0e2a5e210374.webp)node_modules npm 文件缓存目录scaffolds 文夹件下存放的是文章、页面模版scource 文夹件下存放的是我们的资源文件themes 文件下存放的是我们的主题文件.gitignore git 忽略文件，设置提交文件时，哪些文件不提交_config.yml 站点配置文件package.json 站点版本，站点依赖文件yarn.lock yarn.lock 文件由 Yarn 自动创建，并且完全通过 Yarn 进行操作。（3）第三步：进入blog文件夹：输入命令cd blog（4）第四步：安装相关hexo的代码：$ hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page "xx"(hexo n page) 创建页面 $ hexo new "xx" (hexo n "") 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件（5）第五步：启动本地服务，使用Git hash输入命令hexo s -g,完成后如图所示![55555](C:\Users\hp\blog\55555.webp)在浏览器输入 http://localhost:4000/ 就可以访问刚刚创建的静态博客了。![44444](C:\Users\hp\blog\44444.webp)完成以上这些步骤后就可以建立一个自己能够访问的博客页面。]]></content>
      <tags>
        <tag>创建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
