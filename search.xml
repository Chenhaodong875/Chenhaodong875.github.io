<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[article-10]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-10%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[article-9]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-9%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[article-8]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-8%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[HTML5]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-7%2F</url>
    <content type="text"><![CDATA[1.HTML语言：超文本标记语言； ​ 一个网页的组成应包含以下三个部分： ​ html：主体，装载各种标签； ​ css：装饰标签； ​ javascript：控制标签； 2.文件结构： ​ css：存放后缀名为.css的样式文件； ​ img：存放网页中需要的图片文件； ​ index.html：整个网站的首页； ​ js：存放后缀名为.js的样式文件； 3.默认的主体标签：（类似于搭建一个房子的主体） 1234567891011121314 &lt;!DOCTYPE html&gt; //定义HTML语言的主体 &lt;html lang='en'&gt; //定义语言类型&lt;/html&gt; &lt;html&gt; &lt;head&gt; //定义头部 &lt;title&gt;&lt;/title&gt; //定义网页标题 &lt;meta charset="utf-8"&gt; //定义字符类型，防止乱码 &lt;/head&gt; &lt;body&gt; //定义网页主体内容 &lt;/body&gt; &lt;/html&gt; 4.一些基础了解： ​ （1）注释符号或者 // 或者 /* */ ​ （2）定义id的样式# ; 定义类class的样式用. 5.块标签（div）与行标签（span）：（可以理解为墙，相当于一个溶液） ​ （1）块标签(div)：默认独占网页一行；由内容撑开高度；可以设置宽高 ​ （2）行标签(span)：默认在一行显示；由内容撑开宽高；不可以设置宽高 ​ div和span标签的作用就是帮助网页划分不同区域，作为容器使用； 6.CSS样式表： ​ 我们在网页上看到的文字的字体，大小，颜色，图片的大小，边框，背景颜色等，都需要 ​ css样式表帮助我们实现。 ​ CSS样式的引入方式： ​ （1）外部引入：创建后缀名为css的文件，在文件使用对应的选择器，在选择器中添 ​ 加相应的样式； ​ 在head部分加入link标签，引入外部css文件。 1234&lt;head&gt; &lt; !--引入css文件--&gt; &lt;link rel="stylesheet" href="css/index.css"&gt;&lt;/head&gt; ​ 优点：一个css文件可以控制多个页面；方便改版和维护；减少代码量， ​ 代码简洁，便于分工协作；有效利用缓存机制； ​ 缺点：相对于单页面来说，会有垃圾代码；加载时，会给服务器造成压力 ​ （2）内部引入：在head标签中加入style标签，在标签中使用不同的选择器，设置 ​ 样式； 123456&lt;style type="text/css"&gt;.box&#123; width: 250px; height: 800px; background-color: white;&#125; ​ 优点：速度快，没有请求压力；相对于外部引入，代码少； ​ 缺点：不宜改版和维护；代码较乱，不方便前后台沟通； ​ （3）行间样式：在标签内添加style属性，在其中添加对应的样式，样式与样式之间使 ​ 分号隔开； 1&lt;div style="width:100px;height:100px;bakgroung-color:pink"&gt;内容&lt;/div&gt; ​ 优点：优先级最高； ​ 缺点：多与代码多，不利于维护； 7.CSS基础样式： ​ （1）样式单位：px ——计算机屏幕上的像素点。 ​ （2）宽高样式： ​ width：设置元素的宽度——- width：100px; ​ height：设置元素的高度—— height：100px； ​ （3）边框样式： 1border-style：solid/dotted/dashed/none //定义边框线型 ​ none：无边框； ​ solid：实线 ​ dotted：点状边框； ​ dashed：虚线 1border-width：1px //定义边框宽度 1border-color：blue //定义边框颜色 1border：1px solid blue；//复合写法，综合定义边框的宽度、线型和颜色 1border-top/right/bottom/left; //复合属性，可单独设置上下左右边框的样式 ​ （4）背景样式： 1background-color：skyblue; //设置元素的背景颜色 注意：这里的颜色有三种定义方式：英文单词；十六进制；RGB颜色表 12345background-color：black/red/yellow; //设置元素的背景颜色为黑，红，黄；background-color：#RRGGBB; //设置元素的背景颜色为红色、绿色、蓝色background-color：rgb(123,123,123); //设置元素的背景颜色为灰色 ​ （5）盒模型：指css布局中，html中的每个元素在浏览器中的解析都可以被看作是一个 ​ 盒子，都拥有盒子一样的外形和平面空间。 ​ 作用：实现元素与元素之间，元素与内容之间的间距。 ​ margin：元素的外边距 ​ padding：元素的内边距 ​ border：元素的边框 ​ content：元素的内容 123&lt;body&gt; &lt;div style="border: 5px solid red; width: 100px; margin: 10px;padding: 10px"&gt;div1&lt;/div&gt;&lt;/body&gt; 123456789margin:10px； 上下左右外边距均为10像素margin:10px 20px； 上下外边距为10像素,左右为20像素margin:10px 30px 20px； 上外边距为10像素,左右为30像素，下外边距为20像素margin:10px 30px 20px 40px；上外边距为10像素,左为30像素，右为20像素，下外边距为40像素 1234margin-top 上边距 margin-left 左边距margin-right 右边距 margin-bottom 下边距 ​ 注意：行标签不能设置上下margin ​ 同时设置重复样式时，最后编剧按照代码从上到下的执行顺序产生效果。]]></content>
      <tags>
        <tag>前端开发，html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机硬件]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-6%2F</url>
    <content type="text"><![CDATA[​ 作为计算机领域的学者，不管是出于对游戏的爱好还是亲戚好友的一句“你会修电脑吗？”，我们都应该熟悉和了解计算机硬件。一个计算机领域的学者不了解一些计算机硬件的基本信息算不上合格。此外学会计算机硬件在买电脑的时候也会防止被卖家忽悠；同时也可以根据自己的需求合理组装计算机的配件，感觉起来很有趣。我在大学时，有个别同学因为游戏和出于对计算机硬件的兴趣，经常拆卸组装电脑；而大多数同学则是不怎么了解硬件。总而言之，不了解计算机硬件信息真的对于我们计算机系来说，很不应该。（说这么多，只是日常水贴罢了） ​ 上面是凑字数废话了一堆（-*-）；以下是我整理的有关计算机硬件的最基本的相关信息，我们不一定要深入研究计算机，我们只要了解基本信息即可。 1.计算机的五大部件组成： ​ 输入设备（键盘，鼠标，手写板）； ​ 输出设备（显示器，音响，耳机，打印机，投影仪）； ​ 存储器（内存【临时存储】和硬盘【永久存储】）； ​ 运算器 ​ 控制器 2.计算机外部硬件： ​ （1）机箱：保护内部硬件，集成电源（升级硬件要注意电源供给）； ​ （2）CPU风扇：散热—风冷（热量通过硅质导入金属，风扇吹散，价格便宜）和水冷 （散热效果更好，价格昂贵，且害怕液体泄漏） ​ （3）光驱：读取和写入数据 ​ （4）键盘和鼠标：ps2接口（圆形针孔）与usb接口（大多数） 鼠标分为：机械鼠标（动球）、光电鼠标（光感应）、激光鼠标​ （5）显示器：包括LCD（现在使用的，轻捷）和CRT（旧时的大头台式电脑，颜色全） 3.内部重要部件：（爱玩游戏的同学请注意） （1）CPU：中央处理器，负责运算与控制； ​ 核心数：双核，四核；核心数越大越好；（相当于一个人四个头当然比两个头聪明） ​ 目前大多数i5都是双核，i7为4核； ​ 注意：卖家可能会用通道来忽悠卖家是四核，目前大多数为每核双通道； 主频：CPU的运算速度，单位GHZ，主频越高，CPU运算速度越快；​ 缓存：CPU和内存之间的临时存储器，容量小，速度快；目前缓存的大小一般是64M ​ 左右即可；缓存越大越好。读取顺序：一级–&gt;二级–&gt;三级 。 ​ CPU全球量大主流品牌厂商：Intel(美国英特尔公司)和AMD（美国超威半导体公司） ​ 其中Intel的CPU更偏向于高精密计算，AMD的CPU偏向于家庭娱乐方向； ​ Intel的接口类型为触点式，AMD的接口类型为针脚式； （2）主板：为各部件的连接载体（主板的接口类型和数量决定性能：扩展和升级的能力） ​ 接口类型：（1）USB接口：蓝色，3.0接口速度快，5G/s是2.0的10倍 ​ （2）VGA接口 ​ （3）RJ45接口：网卡接口 ​ （4）PATA(IDE)/SATA：硬盘接口，光驱 ​ （5）SCSI接口：硬盘接口（高档工作站、服务器，价格昂贵，支持热插 拔） ​ （6）PCI和PCIE：显卡接口 ​ （7）CPU接口：LGA1633（触点式）和Socket(针脚式) ​ （8）DIMM：内存插槽 （3）内存：负责临时存储，数据交换；容量越大越好 ​ 主频：标志着单位时间内，内存的交换速率 ​ 通道技术：DDR3（第三代）目前一般是DDR4 ​ 注意：电脑升级内存最好要同主频同品牌同型号，以防出现不兼容的问题。 ​ 此外两个内存条大小最好一致，这样能用的时间较长。 （4）显卡：把计算机运算结果转化为影像（画质） ​ 显存：显卡容量，越大越好—–目前16G最大 ​ 位宽： 瞬间传输数据流量，位数越大传输越多；最基本的128； ​ 显卡主流厂商：N卡（NVIDIA英伟达）和A卡（AMD） ​ 关于显卡的性能可以百度显卡性能对比天梯图，这里有一个小技巧， ​ 如GTX和GT比较，GTX更好；860和950比较860更好，860和970比较，970 ​ 更好（主要取决于中间位数，中间为越大越好）；960比1050好，其实1050 ​ 就是披着马甲的950； （5）硬盘：外部存储器，大小1T起步，有机械硬盘（电脑自带）和固态硬盘； ​ 硬盘接口类型：SATA（主流笔记本常用）IDE（光驱，淘汰）SCSI（用户服务器） ​ 容量越大越好，转速越快越好 笔记本（5400）台式（7200） ​ 固态硬盘的优点：芯片由阵列组成，无盘片，读写速度快，散热低，无噪音。 （6）驱动程序：硬件厂商根据操作系统编写配置文件来识别硬件。]]></content>
      <tags>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows系统基础]]></title>
    <url>%2F2019%2F09%2F25%2Farticle-5%2F</url>
    <content type="text"><![CDATA[1.BIOS：基本输入输出系统，用来存储计算机基本硬件信息，BIOS程序存储在CMOS芯片 中。 ​ 重启电脑后按F2进入BIOS程序（不同的厂商，型号的电脑进入BIOS的按键不同）]]></content>
      <tags>
        <tag>Windows系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络各层模型概述]]></title>
    <url>%2F2019%2F09%2F24%2Farticle-3%2F</url>
    <content type="text"><![CDATA[1.物理层：定义了终端设备的传输介质，传输的是比特流。 ​ 注意：不管是什么传输介质，传输数据的过程中，信号都会出现衰减，这个时候需 要使用设备来延长信号的传输距离。 ​ 物理层设备：hub集线器，只能识别比特流； ​ 总线型：网络传输效率特别低 ​ 无学习功能每个接口都是一个冲突域。 2.数据链路层：把比特流封装成数据帧，实现基于MAC地址的寻址和转发； ​ （1）MAC地址：也叫物理地址，以太网地址； ​ 由48位二进制数组成，为了读写方便，用十六进制表示。 ​ 其中前24位是厂商信息，后24位表示设备，由厂家自定义。 ​ MAC地址是由厂家出厂直接刻录到网卡里的，一般不能修改。 ​ ipconfig /all ——-用于查看网卡信息，在Windows命令行输入。 ​ MAC地址分类： ​ 单播MAC地址：如果一个MAC地址的第八位是0，这个地址表示单播MAC； 组播MAC地址：如果一个MAC地址的第八位是1，这个地址表示组播MAC； ​ 广播MAC地址：全 FF:FF:FF:FF ​ （2）以太网二层数据帧格式： ​ 6字节目标MAC地址+6字节源MAC地址+2字节类型+数据（最大1500字节）+ ​ 4字节的帧校验序列 ​ （3）数据链路层设备：交换机（二层设备） ​ 工作原理：利用ARP地址解析协议，根据IP地址找MAC地址； ​ Windows系统中的ARP命令： ​ arp -a：查看ARP缓存表； ​ arp -d：清除ARP缓存表； 123456789101、pc1想和pc3通信，先查看自己ARP表项目，如果有就直接发送数据；如果没有就发送广播，以ARP广播的形式发送出去。source：192.168.1.1 M1 destination：192.168.1.3 FF2、交换机：学习/转发学习：把pc1的MAC地址放到MAC地址表中；转发：目标地址为全FF，广播到除源端口意外的所有端口；3、反应：如果是来找我的就恢复；如果不是找我的，我就丢弃。pc3回复的报文,以单播的形式回复source： 192.168.1.3 M3 destination：192.168.1.1 M14、交换机：学习/转发学习：把pc3的MAC地址存储到自己的MAC地址表中；转发：收到单播的数据包，查找自己的MAC地址表中记录，直接单播给pc1; ​ （4）ARP欺骗：利用交换机广播的工作原理，对用户身份没有验证功能。 ​ 欺骗所有主机（告诉所有客户端假的网关mac地址）； ​ 中间人攻击（欺骗两个通信主机，获取他们的通信数据）； 3.网络层：把数据帧转换成数据包，实现基于IP地址的寻址和转发。 ​ 数据包格式：三层IP头部+数据 ​ 注意：TTL为生存时间期限，是一个三层防环机制，数据包每经过一个三层设备（路 由器)，TTL值就会减1，当TTL值=0时，那么这个数据包就不能继续传播，会 被丢弃；其中每经过一次三层设备，叫做一跳。 ​ tracert 域名或IP地址 ——追踪数据包，显示数据包经过的三层设备。 ​ 网络层协议： ​ ICMP：互联网控制报文协议，是一个错误侦测与回馈机制，用来测试网络连 通性 ​ 报文类型：request(请求报文)与reply(回复报文) ​ ping命令—-基于ICMP协议 1234567891011 -t 一直ping ，crl+c取消​ -a 解析主机名​ -l 指定测试数据包大小​ -i 指定生存时间​ -n 指定数据包的数量​ -f 不分片(不拆分数据包) ​ 网络层设备：路由器（三层） ​ 路由器作用： ​ （1）实现不同网段的通信 ​ （2）隔离广播域 ​ （3）为数据包寻找一条最优路径 ​ 注意：路由器的每个接口都是不同的一个网段 ​ MAC地址是二层的概念，是不能跨网段的。 ​ 路由器的工作原理： 123456789101112131415161718192021222324252627当PC1（192.168.1.1）------&gt;PC3（的92.168.2.1）通信的时候： （1）PC1先查看自己的ARP表，有直接发送；没有进行判断。 ​ PC1先判断目标主机和自己是否在同一个网段：若在同一个网段，直接发送ARP请求 （广播）；若没有在相同网段，就把数据包发送给网关；​ source源：192.168.1.1 PC1的MAC地址 ​ destination目标：192.168.2.1 PC1网关的MAC地址（2）路由器：根据目标MAC地址判断是不是找我的，是找我的就回复，不是就丢弃。​ 回复：把数据帧还原成数据包，根据目标IP地址查看路由表，转发。​ 路由器把到达192,。168.2.1的数据包从f0/1接口发送出去。​ source 192.168.1.1 PC3网关的MAC地址​ destination 192.168.2.1 PC3的MAC地址（3）PC3反应：给PC1回复数据包。 source： 192,.168.2.1 PC3的MAC地址​ destination： 192.168.1.1 PC3的网关MAC地址（4）路由器：目标Mac是找我的，我就拆包，看到里边的目标ip;根据目标IP进行路由表的 查找，从相应接口发送进去。​ source： 192.168.2.1 PC1的网关MAC地址​ destination： 192,168.1.1 PC1的MAC地址 ​ 边缘路由器：一端连着内网（LAN），一端连着外网（WAN） ​ 默认路由器：一般配置在出口路由器，一边连接内网一边连接外网，所有不知道的数据 包都交给互联网 ​ 解决链路冗余的两种方法：负载均衡与浮动路由。 ​ 负载均衡：多条链路同时进行传输； ​ 浮动路由：多条链路中至于一条是主链路，其他都是备份链路，只有主链路发生故 障，备份链路才会被启用。 ​ 通过修改静态路由的优先级（管理距离）来决定那条链路是主链路。 ​ 优先级的范围是1——255，越小越优先，默认是1可修改优先级，在下一 跳后添加 4.传输层：把数据包装花城数据段，为数据提供可靠（TCP）或不可靠的(UDP)传输，并为应 用程序提供端到端的服务。 ​ 传输层协议：TCP/IP协议族的传输层协议主要有TCP协议和UDP协议； ​ TCP（Transmission Control Protocol）传输控制协议：，端到端的协议 ​ 面向连接的，可靠的，提供全双工的服务； ​ 报文结构：源目端口号，序列号，确认号，flag标志位 ​ UDP（User Datagram Protocol）用户数据报协议； ​ 无连接的，不可靠的； ​ 报文结构：源目端口号，UDP长度，校验和； ​ netstat -an —-windows命令行查询本地看房的端口号及协议信息 12345678910***TCP三次握手：​（1）SYN=1; //向服务器发送想建立连接的请求； seq=x; //向服务器发送数据包，序列号编号为x； ​（2）SYN=1,ACK=1; //服务器回复同意建立连接请求，并确认了请求； seq=y,ack=x+1; //服务器回复数据包的序列号为y，并确认了PC的数据包x+1； ​（3）ACK=1; //pc确认后，给服务器回复，发送数据包序列号为x+1； seq= x+1,ack=y+1; //pc确认收到服务器的数据包y+1，并发送数据包序列号为 x+1； ​ 基于TCP的三次握手的攻击：（1）SYN攻击：攻击者向服务器发送大量的伪造请求报文，服务器会向假的请求者建立连接关系，但是实际上这些主机根本没有请求服务器建立连接，所以导致服务器一直处于半连接状态，如果连接过多，会造成服务器资源消耗严重，甚至死机。（2）LAND攻击：攻击者伪造报文，让服务器自己和自己建立连接，导致服务器资源消耗严重。 1234567891011121314151617***TCP四次断开连接：（1）pc没有数据传给服务器，请求拆除连接；​ FIN=1,seq=m;（2）服务器确认收到信息并回复响应pc;​ ACK=1,seq=n,ack=m+1;（3）服务器同意回复终止连接;​ FIN=1,seq=n,ack=m+1;（4）pc确认收到信息并回复给服务器;​ ACK=1,seq=m+1,ack=n+1; 5.会话层 6.表示层 7.应用层]]></content>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络基础概述]]></title>
    <url>%2F2019%2F09%2F24%2Farticle-2%2F</url>
    <content type="text"><![CDATA[1.什么是网络？ 计算机把不在同一地理位置的主机，通过传输介质和通信协议，实现网络通信和资源共享。 2.网络四要素？ 传输介质、通信协议、资源、终端 3.网络的分类： （1）按范围划分： ​ WAN:广域网（万维网—–外网—-公网） ​ LAN:局域网（内网—私网） ​ MAN;城域网 ​ PAN:个域网 （2）按IP地址划分： ​ 公网IP地址:由Inter NIC负责。这些IP地址分配给注册并向Inter NIC提出申请的组织机构。通过它直接访问因特网。 ​ A类：1.0.0.1-126.255.255.254 ​ B类：128.1.0.1-191.254.255.254 ​ C类：192.0.1.1-223.255.254.254 ​ 私网IP地址：属于非注册地址，专门为组织机构内部使用。 ​ A类：10.0.0.0——10.255.255.255 ​ B类：172.16.0.0——172.31.255.255 ​ C类：192.168.0.0——192.168.255.255 ​ D类：239.0.0.0——239.255.255.255 （3）按拓扑结构划分： ​ 星型拓扑：易于实现、网络扩展、故障排查 ​ 中心节点压力大，组网成本较高 ​ 网型拓扑：各个节点至少与其他两个节点相连 ​ 可靠性高、组网成本高 ​ 全网型和部分网状型 4.网络协议（语言）包括： ​ 语法、语义、语序（同步） 5.网络国际标准包组织括： ​ ISO：国际标准化组织 ​ ANSI：美国国家标准化局 ​ ITU-T：国际电信联盟-电信标准部 ​ IEEE：电气和电子工程师学会ISO：国际标准化组织 6.网络OSI标准七层模型： ​ 最开始的网络厂商是不兼容的，不能直接对接。 为了促进各厂商的融合，ISO组织提出 了OSI（Open System Interconnection，OSI）七层模型。 ​ 主要定义了数据在传输过程中如何进行‘封装’（打包）和‘解封装’（拆包） ​ 物理层：定义了终端设备的传输介质；传输比特流。 ​ 数据链路层：把比特流转化成数据帧，实现基于二层MAC地址的寻址与转发。 ​ 网络层：把数据帧转化成数据包，实现基于三层IP地址的寻址和转发。 ​ 传输层（运输层）：把数据包装花城数据段，为数据提供可靠（TCP）或不可靠的 (UDP)传输，并为应用程序提供端到端的服务。 ​ 会话层：用来建立、维持、管理和终止会话。 ​ 表示层：数据的表现形式，比如加密和压缩。 ​ 应用层：为用户提供服务。 7.常见的物理介质： （1）同轴线缆：传输速度快，只有一个芯，半双工 ​ 应用：电视，监控； ​ 100base-2(细线，理论上可以传输185m) ​ 100base-5(粗线，理论上可以传输500m) （2）光纤：两根芯，全双工 ​ 单模光纤：只传输一种光，传输距离远 ​ 多模光纤：可以传输多种光 （3）网线：以太网（内网）一种常见传输介质 ​ 结构划分： ​ 屏蔽双绞线（有锡纸包裹，适合室外布线防雨） ​ 非屏蔽双绞线（适合室内家用） ​ 传输速率划分： ​ 五类线CAT5—–10兆和百兆以太网 ​ 六类线CAT6—–千兆以太网 ​ 七类线（超六类）—–万兆以太网 ​ 网线排序分类： ​ T568A：绿白，绿，橙白，蓝，蓝白，橙，棕白，棕 ​ T568B：橙白，橙，绿白，蓝，蓝白，绿，棕白，棕 ​ 以太网中，使用1,2用于发送；3,6用于接收。 ​ 直通线：一根线的两端都是T568B—-用于不同设备之间 ​ 双绞线：一端是T568B,另一端是T568A—-同种设备之间用 ​ console线（全反线）—显示屏与主机间的那种长口线—-需要安装驱动 并对设备进行配置 8.常见术语： ​ 广播：一对多（老师讲课） ​ 组播：一对多（群聊），只有同一个组里的主机才能接收到。 ​ 单播：一对一 ​ 全双工：同一时刻可以同时进行发送（上传）和接收（下载）数据，如手机 ​ 半双工：同一时刻，智能进行发送或接收数据，如对讲机 ​ 单工：只能进行单向传输，如收音机 ​ 冲突域：一个冲突影响的范围 ​ 广播域：一个广播影响的范围 ​ 带宽：单位时间内传输数据的速度，单位：bit/s 9.进制： ​ 二进制：0,1 ​ 八进制：0,1,2,3,4,5,6,7 ​ 十进制：0,1,2,3,4,5,6,7,8,9 ​ 十六进制：0,1,2,3,4,5,6,7,8,9，A(10),B(11),C(12),D(13),E(14),F(15) ​ 进制转换： ​ 十进制转化成其他进制：短除法/2 ,/8 ,/16 ​ 其他进制转化成十进制：乘法权位相加 ​ 二进制与其他进制的转换：8421BCD码 10.IP地址分为 IPV4 与 IPV6 ​ IPV4：由32位二进制数组成，用点分十进制表示，地址空间42亿。 ​ IPV4按用途分类分为：公网地址与私网地址； ​ 公网地址：在互联网中使用，具有全球唯一性，运营商ISP负责分配公网IP ​ 私网地址：以太网中可重复使用 ​ IPV6：有128位二进制数组成，用冒号十六进制表示 11.IP地址分类： 123456 默认子网掩码 地址范围 A类：1---126 255.0.0.0 1.0.0.0——126.255.255.255B类：128---191 255.255.0.0 128.0.0.0——191.255.255.255C类：192---223 255.255.255.0 192.0.0.0——223.255.255.255D类：224---239 用于组播E类：240---255 用于科研 12.网络常见名词： ​ IP用来标识一台主机； ​ 子网掩码用来标识IP地址中的网络位和主机位； ​ 网络位：在IP地址中与子网掩码1（二进制）对应的是网络位； ​ 主机位：在IP地址中与子网掩码0（二进制）对应的是主机位； ​ 网络地址：主机位全为0——–路由器找路时使用 ​ 广播地址：主机位全为1——–同一个网络中广播的时候使用 13.路由协议：包括静态路由协议和动态路由协议 14.常用的端口号： 端口号范围：0——65535,1——1024是知名端口 TCP 21/20——FTP（21建立连接，20用来传输数据） TCP 80——Web服务（http协议）；https(TCP443) TCP445——Windows的共享 TCP23——Telnet，明文传输 TCP22——SSH，加密传输 TCP3389——远程恒桌面RDP服务 TCP25——SMTP（邮件传输协议），发送 TCP110——POP3（邮局协议版本3），接受邮件 TCP3306——MYSQL服务UDP53——DNS服务（如果是客户端请求服务器来解析的haul，使用的是UDP-53） UDP67,68——DHCP服务 UDP69——TFTP服务（简单文件传输协议） UDP111——RPC（远程过程调用） UDP123——NTP（网络时间协议） 15.MAC地址： ​ 由48bit的二进制数组成，为了读写方便，用十六进制表示。其中前24位是厂商信息，后 24位表示设备信息，由厂家自定义。MAC地址是由厂家出厂 的时候直接烧录到网卡里 ， 一般不能修改。​ ARP -a //查看ARP表——IP地址—MAC地址​ 单播MAC地址：如果一个MAC地址的第八位是0，这个地址表示单播MAC ​ 组播MAC地址：如果一个MAC地址的第八位是1，这个地址表示组播MAC ​ 广播MAC地址：全FF:FF:FF:FF 16.网络层数据包格式： ​ 数据包：三层ip头部+数据 IP头部： 标准长度为20字节 ​ TTL:tme to live 生存时间，是一个三层防环机制，可以限制一个数据包在网络中的传输时间。数据包没经过一个三层设备（路由），它的TTL值就会减1，如果TTL值=0，那么这个数据包就不能继续传播，会被丢弃，每经过一次三层设备，叫做一跳。 17.广播域广播域： ​ 广播：将广播地址作为目的地址的数据帧； ​ 广播域：网络中能接收到同一个广播所有节点的集合； 18.路由器的功能： （1）实现不同网段的通信（2）隔离广播域（3）为数据包寻找一条最优路径 ​ 注意：路由器的每个接口都是不同的一个网段（一个广播域） 19.解决链路冗余问题的方法： ​ 负载均衡：多条链路同时进行数据传输，没有主备链路之分；如果一跳down掉，还有 一条冗余 ​ 浮动路由：多条链路中至于一条是主链路，其他都是备份链路，只有主链路发生故障， 备份链路才会被启用。通过修改静态路由的优先级（管理距离）来决定那条 链路是主链路。 20.静态路由： ​ 边缘路由器（出口路由）：一端连着内网（LAN），一端连着外网（WAN） ​ 默认路由器：一般配置在出口路由器，一边连接内网一边连接外网，所有不知道的数 据包都交给互联网 21.TCP协议： ​ TCP：是可靠的传输方式；所有的web页面都是基于TCP的。 （1）TCP传输数据之前，先建立连接的； （2）TCP传输数据的时候，会给每个数据做一个编号（sequence 序列号），以保障数 据的可靠性。 （3）TCP是全双工的协议，同一时间可以上传和下载。 22.TCP的报文结构： （1）第一列：源目端口号 （2）第二列：序列号（发送端给每个数据进行编号） （3）第三列：确认号（用来对发送端的数据做确认）=====》保障数据传输的可靠性 （4）第四列：包含Flag位（标志位），用来描述这个报文的功能。 SYN=1，表示想建立连接。 ACK=1，表示报文是用来回复的。 FIN=1，表示想拆除连接。 23.基于TCP三次握手的攻击 （1）SYN攻击：攻击者向服务器发送大量的“伪造请求报文”，服务器会向“假的请求者”去建立邻居关系；但实际上，这些“主机”根本没有请求服务器建立连接，导致服务器一直处于半连接状态。如果连接的数量过多，会导致服务器资源消耗严重，甚至死机。 （2）LAND攻击：攻击者伪造报文，让服务器自己和自己建立连接，导致服务器资源消耗严重。 24.VLAN（virtual lan 虚拟局域网） ​ 一个VLAN=一个网段=一个广播域； 25.vlan划分的意义： （1）过大的广播域，造成了带宽的浪费； （2）过大的MAC地址表，造成转发效率低下； （3）存在安全隐患，不好管理 26：vlan的划分： ​ 静态vlan：基于端口划分，链接到交换机某个接口的主机始终属于一个vlan； ​ 动态vlan：基于MAC地址划分；不管主机移动到哪个端口，都属于一个vlan； ​ 注：动态vlan需要部署VMPS服务器，很麻烦，一般不用。 27.vlan的范围： ​ VLAN1是默认所有交换机的接口，不能删除； ​ 2-1001位用户使用的以太网VLAN（常用）； ​ 0,4095是保留VLAN，仅限系统使用； ​ 扩展VLAN 1025-4094 ，用于扩展以太网的VLAN； 28.Access链路与Trunk链路： Access链路：连接交换机与pc之间的链路，只能承载一个vlan； Trunk链路：连接交换机与交换机，交换机与路由器之间的链路，可以承载多个vlan； 29.以太网中实现中继，有两种封装类型： ​ ISL(Cisco私有标准) ​ IEEE 802.1q(国际通用标准) 30.Native Vlan（本征vlan）；在 交换机中默认是vlan1。 ​ 除了vlan1，其他自己创建的vlan都要打标签 （1）交换机收到一个来自native vlan的数据，会不打标签发送（原始数据帧） （2）如果交换机收到一个原始数据帧，会把数据帧广播到native vlan的端口 31.DTP协议：动态trunk协议，用来协商这条链路是否要成为trunk（思科私有协议） ​ trunk的模式：接入（Access）不发送DTP，也不协商；不成为trunk； ​ 干道（Trunk）强制为trunk，不管对端状态，收到DTP报文； ​ 动态企望（Dynamic desirable）主动发送和响应DTP报文协商； ​ 动态自动（Dynamic auto）不发送DTP，如果收到可以恢复，被动协商 ​ 非协商（Nonegotiate）不再发送DTP报文 ​ 如果是多个厂商对接，一般是trunk和nonegotiate参数搭配使用，不协商，强制为trunk 32.以太通道（EthernetChannel）：多条链路负载均衡，带宽提高；容错，当一条链路失效 时，其他线路通信，不会丢包 ​ 解决交换机之间的链路冗余问题，可提高网络的高可用性。 ​]]></content>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[思科模拟器中网络配置]]></title>
    <url>%2F2019%2F09%2F24%2Farticle-4%2F</url>
    <content type="text"><![CDATA[首先下载并安装思科模拟器软件 Cisco Packet Tracer Student 安装好后打开模拟器，根据需求添加设备，然后连接各设备。 1.交换机（二层）的配置：]]></content>
      <tags>
        <tag>思科、网络配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何搭建个人博客？？]]></title>
    <url>%2F2019%2F09%2F08%2Farticle-1%2F</url>
    <content type="text"><![CDATA[搭建个人博客我们通常使用Hexo+Github Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。GitHub于2008年4月10日正式上线，除了Git代码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。 本地Win10搭建环境安装Git(下载安装包，打开后一直下一步到结束就行)https://git-scm.com/download/win检查电脑是否安装了 Git ？Windows + R -&gt; cmd -&gt; 进入 Dos 窗口在 Dos 窗口下，输入以下命令并执行 ：git –version把下列这段代码加入本地hosts文件(一般在c:\windows\system32\drivers\etc)内，加速访问Github网站的速度 GitHub Start192.30.253.112 github.com192.30.253.119 gist.github.com151.101.100.133 assets-cdn.github.com151.101.100.133 raw.githubusercontent.com151.101.100.133 gist.githubusercontent.com151.101.100.133 cloud.githubusercontent.com151.101.100.133 camo.githubusercontent.com151.101.100.133 avatars0.githubusercontent.com151.101.100.133 avatars1.githubusercontent.com151.101.100.133 avatars2.githubusercontent.com151.101.100.133 avatars3.githubusercontent.com151.101.100.133 avatars4.githubusercontent.com151.101.100.133 avatars5.githubusercontent.com151.101.100.133 avatars6.githubusercontent.com151.101.100.133 avatars7.githubusercontent.com151.101.100.133 avatars8.githubusercontent.com GitHub End安装Nodejs(下载安装包，打开后一直下一步到结束就行)http://nodejs.cn/download/检查电脑是否安装了 Node.js ？Windows + R -&gt; cmd -&gt; 进入 Dos 窗口在 Dos 窗口下，输入以下命令并执行 ：node -v 下载安装完Git后会出现以下两个图标：![Git base](C:\Users\hp\blog\Git base.png)![Git CMD](C:\Users\hp\blog\Git CMD.png)在git上经常使用的命令如下：hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page “xx”(hexo n page) 创建页面$ hexo new “xx” (hexo n “”) 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件 安装Hexo（1）第一步：安装Hexo扩展插件，点击Git Bash,执行以下代码：$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo server（2）第二步：创建一个 blog 文件夹，下载 hexo 相应的代码到该文件中下。此时目录情况如下 ： node_modules npm 文件缓存目录scaffolds 文夹件下存放的是文章、页面模版scource 文夹件下存放的是我们的资源文件themes 文件下存放的是我们的主题文件.gitignore git 忽略文件，设置提交文件时，哪些文件不提交_config.yml 站点配置文件package.json 站点版本，站点依赖文件yarn.lock yarn.lock 文件由 Yarn 自动创建，并且完全通过 Yarn 进行操作。（3）第三步：进入blog文件夹：输入命令cd blog（4）第四步：安装相关hexo的代码：$ hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page “xx”(hexo n page) 创建页面$ hexo new “xx” (hexo n “”) 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件 （5）第五步：启动本地服务，使用Git hash输入命令hexo s -g,完成后如图所示在浏览器输入 http://localhost:4000/ 就可以访问刚刚创建的静态博客了。完成以上这些步骤后就可以建立一个自己能够访问的博客页面。要想其他人也能访问我们的博客的话，需要用到Github。 GitHub注册注册GitHub账号并添加一个远程仓库点击进入https://github.com/官网内注册GitHub账号：注册成功后，登录账号，点击右侧 “+” 号，然后点击 New repository 添加仓库，如图 ：完成上述操作后，点击 Create repository 创建仓库。仓库创建成功后，如图 ：这里有两个地址，一个是 Https，一个是 SSH 。Https 每次提交都需要输入用户名和密码，SSH 只要添加了 SSH key 值，以后提交不需要输入用户名和密码。注 ： 这里创建的仓库名称必须为 username.github.io，username 替换成你的 github 用户名，每个账户有且只有一个仓库用来存放网页静态文件，这里名称是固定的。当创建其他仓库的时候，仓库名称可以自定义。GitHub 添加 SSH key检查本地是否有 SSH key$ cd ~/.ssh$ ls 第一步是进入 .ssh 文件夹，第二步是显示 .ssh 文件下的文件夹及文件。如果 SSH key 存在，就会显示 id_rsa、id_rsa.pub、know_hosts 三个文件 。没有也没关系，下面我们就来创建 SSH key$ ssh-keygen -t rsa -C “你的邮箱”]]></content>
      <tags>
        <tag>创建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
